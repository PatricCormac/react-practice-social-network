{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Message/Message.module.css","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","posts","id","postContent","likes","newPostText","profileReducer","state","action","type","newPost","dialogs","name","messages","message","newMessageText","dialogsReducer","newMessage","users","usersReducer","map","u","userId","followed","reducers","combineReducers","profilePage","messagesPage","usersPage","store","createStore","Header","className","c","header","src","alt","Navbar","nav","item","activeClassName","active","to","ProfileInfo","descriptionBlock","Post","props","likesCount","MyPosts","postsElements","p","key","React","createRef","myPosts","inputBlock","ref","onChange","textPost","current","value","inputPostText","onClick","addPost","date","MyPostsContainer","connect","dispatch","onInputTextActionCreator","Profile","profile","News","Music","Settings","DialogsItem","path","Message","Dialogs","elementsDialogs","d","elementMessages","m","items","e","messageText","target","inputMessageText","sendMessage","DialogsContainer","onInputMessageActionCreator","Users","this","setUsers","uniqueUrlName","photos","small","large","status","styles","userItem","avatarBlock","avatar","unfollow","follow","userInfo","Component","followAC","unfollowAC","setUsersAC","App","render","UsersContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f16f6a59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1rb6X\",\"item\":\"Navbar_item__3hxup\",\"active\":\"Navbar_active__2wrOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3YpEg\",\"userItem\":\"Users_userItem__1fnHU\",\"avatarBlock\":\"Users_avatarBlock__1pkGw\",\"avatar\":\"Users_avatar__13uEu\",\"userInfo\":\"Users_userInfo__28DFO\",\"location\":\"Users_location__2_kUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2-6cZ\",\"items\":\"Dialogs_items__2KbhI\",\"item\":\"Dialogs_item__24Mah\",\"active\":\"Dialogs_active__3hQdy\",\"messages\":\"Dialogs_messages__3FA9T\",\"inputBlock\":\"Dialogs_inputBlock__2ODun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__8cmac\",\"date\":\"MyPosts_date__2JhFD\",\"inputBlock\":\"MyPosts_inputBlock__zzsyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogsItem_item__OYEf7\",\"active\":\"DialogsItem_active__2KuI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__24RrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3yKau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2NCVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3DVPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__nDkoK\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const ADD_POST = 'ADD-POST';\r\nconst INPUT_POST_TEXT = 'INPUT-POST-TEXT';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, postContent: 'Installed Node.js', likes: 3},\r\n    {id: 2, postContent: 'Installed create-react-app', likes: 5},\r\n    {id: 3, postContent: 'Launched a project', likes: 8},\r\n    {id: 4, postContent: 'Learning React', likes: 1},\r\n  ],\r\n  newPostText: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        postContent: state.newPostText,\r\n        likes: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: ''\r\n      };\r\n    }\r\n    case INPUT_POST_TEXT: {\r\n      return {\r\n        ...state,\r\n        newPostText: action.newPostText\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const onInputTextActionCreator = (textPost) => \r\n({type: INPUT_POST_TEXT, newPostText: textPost});\r\n\r\nexport default profileReducer;","const INPUT_MESSAGE_TEXT = 'INPUT-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Oleg'},\r\n    {id: 2, name: 'Petr'},\r\n    {id: 3, name: 'Max'},\r\n    {id: 4, name: 'Misha'},\r\n    {id: 5, name: 'Nikita'},\r\n    {id: 6, name: 'Tolya'}\r\n  ],\r\n  messages: [\r\n    {id: 1, message: 'hello'},\r\n    {id: 2, message: 'hi'},\r\n    {id: 3, message: 'how are you?'},\r\n    {id: 4, message: 'I\\'m fine'},\r\n    {id: 5, message: 'I\\'m happy for you'},\r\n    {id: 6, message: 'Thanks'}\r\n  ],\r\n  newMessageText: '',\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case INPUT_MESSAGE_TEXT:\r\n      return {\r\n        ...state,\r\n        newMessageText: action.newMessageText\r\n      };\r\n    case SEND_MESSAGE:\r\n      let newMessage = state.newMessageText;\r\n      return {\r\n        ...state,\r\n        newMessageText: '',\r\n        messages: [...state.messages, {id: 7, message: newMessage}]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageActionCreator = () => ({type: SEND_MESSAGE});\r\nexport const onInputMessageActionCreator = (messageText) => \r\n({type: INPUT_MESSAGE_TEXT, newMessageText: messageText});\r\n\r\nexport default dialogsReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\n\r\nlet initialState = {\r\n  users: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    \r\n    case SET_USERS: {\r\n      return { ...state, users: [ ...state.users, ...action.users ] }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\n\r\nexport default usersReducer;","import {createStore, combineReducers} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: dialogsReducer,\r\n  usersPage: usersReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react'\r\nimport c from './Header.module.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={c.header}>\r\n      <img src='https:/placehold.it/80' alt='' />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport c from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={c.nav}>\r\n      <ul>\r\n        <li>\r\n          <NavLink className={c.item} activeClassName={c.active} to='/profile'>profile</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className={c.item} activeClassName={c.active} to='/dialogs'>messages</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className={c.item} activeClassName={c.active} to='/news'>news</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className={c.item} activeClassName={c.active} to='/music'>music</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className={c.item} activeClassName={c.active} to='/settings'>settings</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className={c.item} activeClassName={c.active} to='/users'>Users</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport c from './ProfileInfo.module.css'\r\n\r\nconst ProfileInfo = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src='https://placehold.it/1000x200' alt='' />\r\n      </div>\r\n      <div className={c.descriptionBlock}>\r\n        ava + descr\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport c from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={c.item}>\r\n      <img src=\"https://avatars0.githubusercontent.com/u/20645877?s=460&u=cfa16d4597ae1fcc07d3de8d17f27869203eb99e&v=4\" />\r\n      <p>{props.message}</p>\r\n      <span>like {props.likesCount}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport c from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.posts.map(p => <Post likesCount={p.likes} message={p.postContent} key={p.id} />);\r\n  \r\n  let newPost = React.createRef();\r\n\r\n  let addPost = () => {\r\n    props.addPost();\r\n  }\r\n\r\n  let onInputText = () => {\r\n    let textPost = newPost.current.value;\r\n    props.inputPostText(textPost);\r\n  }\r\n\r\n  return (\r\n    <div className={c.myPosts}>\r\n      <div className={c.inputBlock}>\r\n        <textarea ref={newPost} onChange={onInputText} value={props.newPostText} />\r\n        <button onClick={addPost}>Add post</button>\r\n      </div>\r\n      <h2>My posts</h2>\r\n      <p className={c.date}>{props.date}</p>\r\n      { postsElements }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport {addPostActionCreator, onInputTextActionCreator} from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator())\r\n    },\r\n    inputPostText: (textPost) => {\r\n      let action = onInputTextActionCreator(textPost);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport c from './Profile.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={c.profile}>\r\n      <ProfileInfo />\r\n      <MyPostsContainer\r\n        date='30.03.2020' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport c from './News.module.css'\r\n\r\nconst News = (props) => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default News","import React from 'react'\r\nimport c from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport c from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\nimport c from './DialogsItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogsItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return (\r\n    <li>\r\n      <NavLink className={c.item} activeClassName={c.active} to={path}>{props.name}</NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default DialogsItem","import React from 'react'\r\nimport c from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={c.message}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport c from './Dialogs.module.css';\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.messagesPage;\r\n\r\n  let elementsDialogs = state.dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id} />);\r\n  let elementMessages = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n  let newMessageText = state.newMessageText;\r\n\r\n  let sendMessage = () => {\r\n    props.sendMessage();\r\n  }\r\n\r\n  let onInputMessage = (e) => {\r\n    let messageText = e.target.value;\r\n    props.inputMessageText(messageText);\r\n  }\r\n\r\n  return (\r\n    <div className={c.dialogs}>\r\n      <nav className={c.items}>\r\n        <ul>\r\n          { elementsDialogs }\r\n        </ul>\r\n      </nav>\r\n      <div className={c.messages}>\r\n        { elementMessages }\r\n        <div className={c.inputBlock}>\r\n          <textarea value={newMessageText} onChange={onInputMessage}></textarea>\r\n          <button onClick={sendMessage}>send message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import {onInputMessageActionCreator, sendMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    inputMessageText: (messageText) => {\r\n      dispatch(onInputMessageActionCreator(messageText))\r\n    },\r\n    sendMessage: () => {\r\n      dispatch(sendMessageActionCreator())\r\n    }\r\n  }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\n\r\nclass Users extends React.Component {\r\n  componentDidMount() {\r\n    this.props.setUsers([\r\n      {\r\n        name: \"VladPatsiuk\",\r\n        id: 9710,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"Ilia_ov\",\r\n        id: 9709,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"Rovel8\",\r\n        id: 9708,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"samo_dur_andre\",\r\n        id: 9707,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"Natalka77712\",\r\n        id: 9706,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"bakhtiyarrem\",\r\n        id: 9705,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"Melon\",\r\n        id: 9704,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"moiz23\",\r\n        id: 9703,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"moiz\",\r\n        id: 9702,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n      {\r\n        name: \"is_bubux_c\",\r\n        id: 9701,\r\n        uniqueUrlName: null,\r\n        photos: {\r\n          small: null,\r\n          large: null,\r\n        },\r\n        status: null,\r\n        followed: false,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.users}>\r\n        {this.props.users.map((u) => (\r\n          <div key={u.id} className={styles.userItem}>\r\n            <div className={styles.avatarBlock}>\r\n              <img\r\n                src={\r\n                  u.photos.small != null\r\n                    ? u.photos.small\r\n                    : \"https://placehold.it/60x60\"\r\n                }\r\n                className={styles.avatar}\r\n              />\r\n              {u.followed ? (\r\n                <button\r\n                  onClick={() => {\r\n                    this.props.unfollow(u.id);\r\n                  }}\r\n                >\r\n                  unfollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={() => {\r\n                    this.props.follow(u.id);\r\n                  }}\r\n                >\r\n                  follow\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className={styles.userInfo}>\r\n              <div>\r\n                <p>{u.name}</p>\r\n                <p>{u.status}</p>\r\n              </div>\r\n              <div className={styles.location}>\r\n                <p>{\"u.location.country\"}</p>\r\n                <p>{\"u.location.city\"}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport { followAC, unfollowAC, setUsersAC } from \"../../redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    follow: (userId) => {\r\n      dispatch(followAC(userId));\r\n    },\r\n    unfollow: (userId) => {\r\n      dispatch(unfollowAC(userId));\r\n    },\r\n    setUsers: (users) => {\r\n      dispatch(setUsersAC(users));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Profile from './components/Profile/Profile';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\n\r\nconst App = (props) => {\r\n\r\n  return (\r\n    <div className='app-wrapper'>\r\n      <Header />\r\n      <Navbar />\r\n      <div className=\"app-wrapper-content\">\r\n        <Route path='/dialogs' render={ () => <DialogsContainer /> } />\r\n        <Route path='/profile' render={ () => <Profile  /> } />\r\n        <Route path='/news' render={ () => <News /> } />\r\n        <Route path='/music' render={ () => <Music /> } />\r\n        <Route path='/settings' render={ () => <Settings /> } />\r\n        <Route path='/users' render={ () => <UsersContainer /> } />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}